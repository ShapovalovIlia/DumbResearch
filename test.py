import numpy as np

# Input data
data = """
0.41320144337346154 0.20145959483576922 0.12398300648282053 0.32087851685628205
0.1549464384884615 0.16715783702576922 0.15049515247782053 0.16473532838128205
0.1560603300934615 0.16070336925076922 0.12047348499782053 0.28511191530628205
0.21819411917346151 0.1485039673957692 0.15748367786782053 0.23506308715628205
0.2044917265734615 0.14997644054076922 0.13802872181282053 0.17823935670128205
0.1716700713034615 0.15691918956076922 0.14468155384782053 0.17547751588128205
0.2148982207234615 0.18366784678576922 0.14375076771282053 0.22340537230628205
0.15092574757346153 0.21543664563576922 0.12259445667782053 0.30439902465628205
0.41196509462346154 0.3552629510857692 0.3492114633378205 0.25121293685628204
0.3540700096234615 0.3620178710857692 0.14213208833782054 0.40322511685628204
0.35951779962346153 0.24394543608576924 0.2691761583378205 0.36067713185628203
0.1673713046234615 0.4060200760857692 0.36533252833782054 0.41177855685628206
0.3257879246234615 0.29201013108576923 0.34200598833782053 0.23396827685628205
0.3402898796234615 0.40658858108576923 0.3505347733378205 0.39336095185628206
0.3933929646234615 0.3362307810857692 0.24426060333782051 0.352354831856282
0.1664683896234615 0.4027484460857692 0.15291636833782052 0.41683347185628206
0.1482748946234615 0.3891705560857692 0.3308269933378205 0.33080991185628206
0.3620829096234615 0.17431738108576922 0.25534230833782057 0.27246519685628207
0.19684178462346152 0.16410170608576924 0.1874401133378205 0.2709333718562821
0.22921503962346151 0.38191931108576926 0.20716259833782052 0.286674766856282
0.40646668962346155 0.21368862608576922 0.14426522333782055 0.31265971185628205
0.3516167996234615 0.17594099108576922 0.13174135833782052 0.361191171856282
0.33825276462346154 0.17160565108576922 0.31198195333782053 0.23905679685628206
0.3134259496234615 0.3037320660857692 0.12445050833782054 0.41348240685628207
0.3499323646234615 0.40502916108576925 0.30455827333782054 0.26078229185628204
0.1583016196234615 0.23495947108576923 0.2721267583378205 0.39127824685628204
0.3846526846234615 0.16337419608576922 0.31432785333782054 0.23295891685628206
0.1691008396234615 0.3828664210857692 0.1534055183378205 0.22577920685628206
0.36592732962346153 0.3175822910857692 0.2943025983378205 0.23080849685628205
0.3965718296234615 0.2576406710857692 0.2806166033378205 0.41129972185628205
0.3896249896234615 0.35657085108576925 0.34936404833782053 0.3902388268562821
0.30899571462346154 0.21345802108576922 0.3193017333378205 0.41976110685628204
0.14633617462346152 0.3101501060857692 0.19498314833782054 0.33123954685628204
0.2751466096234615 0.15832226108576924 0.18075846333782053 0.27793807185628205
0.2991363996234615 0.25227254108576924 0.15861153333782052 0.337843166856282
0.3454991196234615 0.3177966610857692 0.19188630333782053 0.42772796185628204
0.2550839146234615 0.30008506608576924 0.3625544483378205 0.25566785185628205
0.30170755462346155 0.32902924108576925 0.2787608633378205 0.27668770185628205
0.3965718296234615 0.2576406710857692 0.2806166033378205 0.41129972185628205
"""

# Process the input into a numpy array
data = np.array([list(map(float, row.split())) for row in data.strip().split("\n")])

# Compute column-wise means
column_means = np.mean(data, axis=0)

# Adjust values closer to the mean
adjusted_data = data + 0.5 * (column_means - data)

for data in adjusted_data:
    print(*data)
